#1. I Showed the artist name, song name, content, and the review that is higher than 8 

SELECT artist, title, content, score
FROM reviews AS r
JOIN content AS c
ON r.reviewid = c.reviewid
WHERE score > 8;




#2. I Found the artist and the label they're signed too

SELECT artist, label
FROM artists AS a
JOIN labels AS l
ON a.reviewid = l.reviewid;




#3. I Showed each label and number of artists it has

SELECT label, COUNT(*)
FROM labels AS l
JOIN artists AS a
ON l.reviewid = a.reviewid
WHERE label IS NOT NULL
GROUP BY 1
ORDER BY COUNT(*) DESC;




#4. I Found all artists whose genre is rock with there song and there rating

SELECT artist, title, genre, score
FROM artists AS a
JOIN genres AS g
ON a.reviewid = g.reviewid
JOIN reviews AS r
ON a.reviewid = r.reviewid
WHERE genre = 'rock';




#5. I Showed all artists whose name begins with 'N' and there genre is rap also with there lable and year 

SELECT artist, genre, label, year
FROM artists AS a
JOIN genres AS g
ON a.reviewid = g.reviewid
JOIN labels AS l
ON a.reviewid = l.reviewid
JOIN years AS y
ON a.reviewid = y.reviewid
WHERE artist LIKE 'N%' AND genre = 'rap';




#6. I Selected all the labels 50 cent was signed too

SELECT DISTINCT artist, label
FROM artists AS a
JOIN labels AS l
ON a.reviewid = l.reviewid
WHERE artist = '50 cent';





#7. I Showded ALL artist name and their song but only songs that start with the letter A with their author and author type

SELECT a.artist, title, author, author_type
FROM artists AS a
LEFT JOIN reviews AS r
ON a.reviewid = r.reviewid
WHERE title LIKE 'A%';





#8.  I Showed artist name together with their average score but only artists whose score is 8.5 or more 

SELECT artist, AVG(score)
FROM reviews
GROUP BY artist
HAVING AVG(score) >= 8.5;




#9. I identified the 3 labels that have the most artits 

SELECT label,
       COUNT(artist) AS number_of_artist
FROM labels AS l
JOIN artists AS a
    ON l.reviewid = a.reviewid
GROUP BY label
ORDER BY number_of_artist DESC
LIMIT 3;





#10. I found all the artiss who worked with the author Sheldon Pearce

SELECT *
FROM reviews AS r1
JOIN reviews AS r2
    ON r1.reviewid = r2.reviewid
WHERE R1.author = 'sheldon pearce';






#11. I Showed all artist, title, publish date and genre of their songs

SELECT artist, title, pub_date, genre
FROM reviews
JOIN genres
ON reviews.reviewid = genres.reviewid
WHERE genre IS NOT NULL;





#12. I joined the reviews table and years table using NATURAL JOIN

SELECT *
FROM reviews
NATURAL JOIN years




#13.  I determined what artists has not been signed to a label

SELECT *
FROM artists AS a
RIGHT JOIN labels AS l
    ON a.reviewid = l.reviewid
WHERE label IS NULL;





#14. I Showed artists whose author is andy beta

SELECT artist
FROM reviews
WHERE author =(SELECT author
                FROM reviews
                WHERE author = 'andy beta');
                
                
                
                
          
#15. I Showed artists and their score but only artists whose score is greater than the average score of all artists 

SELECT artist, score
FROM reviews
WHERE score > (SELECT AVG(score)
                FROM reviews);
                
                
                
                
            
 #16. I Showed the arist and their score with the average score of all artists
 
 SELECT artist, score, (SELECT AVG(score) FROM reviews) AS avg_score
FROM reviews;




               
#17. I found artists who published there songs in the year 2016 and month of september 

SELECT a.artist, title, pub_date
FROM artists AS a
JOIN reviews AS r
ON a.reviewid = r.reviewid
WHERE pub_date BETWEEN '2016-09-01' AND '2016-09-31'
GROUP BY a.artist;





#18. I Rated the artists songs from amazing to terrible by their score

SELECT artist, title, score,
CASE 
    WHEN score >= 9 THEN 'Amazing'
    WHEN score >= 7 THEN 'Good'
    WHEN score >= 4.5 THEN 'Not the best'
    ELSE 'Terrible'
END AS rating_of_songs
FROM reviews;




#19. I showed the artist with thier title, score, author and genre of their song with a score higher than 9 (USING A CTE)

WITH CTE_reviews AS 
(SELECT artist, title, score, author, genre
FROM reviews rev
JOIN genres gen
    ON rev.reviewid = gen.reviewid
WHERE score >= 9
ORDER BY score DESC
)
SELECT *
FROM CTE_reviews;







